apiVersion: batch/v1
kind: Job
metadata:
  name: wait-for-mariadb
spec:
  template:
    metadata:
      name: wait-for-mariadb
    spec:
      restartPolicy: OnFailure  # Add this line
      containers:
      - name: wait-for-mariadb
        image: busybox
        command: ['sh', '-c', 'until nc -z mariadb-service 3306; do echo waiting for mariadb; sleep 2; done;']
  backoffLimit: 10  # Adjust the backoff limit as needed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: sge
  name: payment-service-sd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-service-sd
  template:
    metadata:
      labels:
        app: payment-service-sd
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: payment-service-sd
        image: pedromiguelrodrigues/payment_service_sd:34
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        command: ['php', 'artisan', 'migrate']
        ports:
        - containerPort: 6379
          name: redis
      
---
apiVersion: v1
kind: Service
metadata:
  namespace: sge
  name: payment-service-sd
spec:
  type: NodePort
  ports:
  - port: 80
    nodePort: 30002
  selector:
    app: payment-service-sd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: sge
  name: frontend-react-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-react
  template:
    metadata:
      labels:
        app: frontend-react
    spec:
      containers:
      - name: frontend-react
        image: pedromiguelrodrigues/payment_service_frontend:9
        ports:
        - containerPort: 3000 
---
apiVersion: v1
kind: Service
metadata:
  namespace: sge
  name: frontend-react-service
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 3000
    nodePort: 30003
  selector:
    app: frontend-react
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: sge
  name: mariadb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
      - name: mariadb
        image: mariadb:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root_password
        - name: MYSQL_DATABASE
          value: mydatabase
        - name: MYSQL_USER
          value: myuser
        - name: MYSQL_PASSWORD
          value: mypassword
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mariadb-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mariadb-storage
        persistentVolumeClaim:
          claimName: mariadb-pvc
---
apiVersion: v1
kind: Service
metadata:
  namespace: sge
  name: mariadb-service
spec:
  type: NodePort
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 30004
  selector:
    app: mariadb
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: sge
  name: mariadb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: default
  namespace: sge
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: sge
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--storage.tsdb.retention.time=12h"
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          resources:
            requests:
              cpu: 500m
              memory: 500M
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
  
        - name: prometheus-storage-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: sge
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'
spec:
  selector: 
    app: prometheus-server
  type: NodePort  
  ports:
    - port: 8080
      targetPort: 9090 
      nodePort: 30005